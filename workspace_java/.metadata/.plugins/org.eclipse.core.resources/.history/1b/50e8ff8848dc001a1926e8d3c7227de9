package oracle.db;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import book.ch5.DeptVO;
/* 생성자 안에서도 메소드 호출 가능
 * 변수선언도 가능함.
 * 내안에 있는 메소드를 호출하는 거니까 인스턴스화는 필요없다.
 * 생성자 앞에는 static이 없다.
 * non-static에서 non-static 접근가능하고
 * static에서 non-static은 반드시 인스턴스화
 * 
 */
public class DeptApp extends JFrame implements ActionListener, MouseListener{
	JMenuBar 	jmb 		= new JMenuBar();
	JMenu	 	jm_db 	= new JMenu("오라클연계");
	JMenuItem   jmi_con 	= new JMenuItem("오라클연결");
	JMenuItem   jmi_sel 	= new JMenuItem("조회");
	JMenuItem   jmi_ins 	= new JMenuItem("등록");
	JMenuItem   jmi_upd 	= new JMenuItem("수정");
	JMenuItem   jmi_del 	= new JMenuItem("삭제");
	JMenuItem   jmi_exit 	= new JMenuItem("나가기");	
	//양식, 폼을 그려주는 클래스임.
	JTable      jt_dept     = null;
	//JTable에 스크롤바를 붙여 줄 속지임.
	JScrollPane jsp_dept    = null;
	String      cols[]      = {"부서번호","부서명","지역"};
	String      data[][]    = new String[5][3];
	DefaultTableModel dtm   = null;
	DBConnectionMgr dbMgr   = new DBConnectionMgr();
	Connection        con     = null;
	PreparedStatement pstmt = null;
	ResultSet         rs    = null;//오라클에 살고 있는 일꾼이 있다. 옵티마이저
	public DeptApp() {
		initDisplay();
	}
	public void initDisplay() {
		dtm = new DefaultTableModel(data,cols);
		jt_dept = new JTable(dtm);
		jt_dept.addMouseListener(this);
		jsp_dept = new JScrollPane(jt_dept
				                  ,JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED
				                  , JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
		jmi_sel.addActionListener(this);//actionPerformed
		jm_db.add(jmi_sel);
		jm_db.add(jmi_ins);
		jm_db.add(jmi_upd);
		jm_db.add(jmi_del);
		jm_db.add(jmi_exit);
		jmb.add(jm_db);
		this.add("Center",jsp_dept);
		this.setJMenuBar(jmb);
		this.setSize(450, 320);
		this.setVisible(true);
	}
	public static void main(String[] args) {
		JFrame.setDefaultLookAndFeelDecorated(true);
		new DeptApp();
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		String label = e.getActionCommand();//문자열 라벨 가져오기
		//너 조회 버튼 누른거야?
		if("조회".equals(label)) {
			System.out.println("조회 버튼 클릭 성공~~~");
			String sql = "SELECT deptno, dname, loc FROM dept";
			try {
				con = dbMgr.getConnection();
				pstmt = con.prepareStatement(sql);//메모리에 로딩 성공
				rs = pstmt.executeQuery();
				DeptVO dvo = null;
				DeptVO[] dvos = null;
				while(rs.next()) {
					dvo = new DeptVO();
					System.out.println(rs.getInt("deptno")
							     +", "+rs.getString("dname")
							     +", "+rs.getString("loc"));
				}
			} catch (SQLException e2) {
				// TODO: handle exception
			}
		}
	}
	@Override
	public void mouseClicked(MouseEvent me) {
		if(me.getClickCount()>=2) {
			System.out.println("더블 클릭 한거야");
		}
		
	}
	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void mousePressed(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub
		
	}

}
